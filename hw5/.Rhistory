identify(crab$W, crab$Sa)
# Chunk 1
## 1.Active packages
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# Chunk 2
# import in the crab data
crab = read.table('./HW5-crab.txt', header = T)
# test if there is obs = 0 for W and Wt, no 0 exists for model
nrow(crab)
nrow(subset(crab, crab$W > 0))
nrow(subset(crab, crab$Sa > 0))
crab.M1 <- glm(crab$Sa~W, family = poisson(link = log), data = crab)
summary(crab.M1)
# n = 173, beta0 =-3.30476, beta1 = 0.16405
anova(crab.M1)
# Chunk 3
## we may suspect some outliers from the simple Y-X scatter plot;
ggplot(data = crab, aes(x = W, y = Sa )) +
geom_point(shape = 1)  +
geom_smooth(method = glm)
## fit the log model:
ggplot(data = crab, aes(x = log(W + 1), y = Sa )) +
geom_point(shape = 1)  +
geom_smooth(method = glm)
## Identify outliers
plot(residuals(crab.M1, type = "deviance"))
res.p1 = residuals(crab.M1, type = 'pearson',data = crab)
res.p1
pihat1 = predict(crab.M1, type = 'response')
pihat1
G.stat1 = sum(res.pearson1^2) # Generalized Pearson Chisq Stat
G.stat1
G1=sum(res.p1^2)
G1 = sum(res.p1^2)
G1
### Wave Damage Data (Page 205 of GLM)
#The data concern a type of damage caused by waves to the forward section of certain cargo-carrying vessels. For the purpose of setting standards for hull construction, one needs to know the risk of damage associated with the three classifying factors shown below:
#
#           Ship Type: A-E
#Year of Construction: 1960-64, 65-69, 70-74, 75-79
# Period of operation: 1960-74, 75-79
#
#Two other variables are Aggregated months of service and Number of damage accidents.
#
#The question of interest is how the number of damage accidents depends on the other four variables.
## formulate the data into a data.frame
month=c(127,63, 1095,1095,1512, 3353, 0,2244, 44882, 17176, 28609, 20370,  7064, 13099,0, 7117,1179,552,781,676,783,1948,0,274,251,105,
288,192,349,1208, 0,2051,45,0,789,437,1157, 2161, 0,542)
damage=c(0 , 0  ,3  ,4  ,6, 18,  0, 11, 39, 29, 58, 53, 12, 44,  0, 18,  1,  1,  0,  1,  6,  2,  0,  1,  0,  0,  0,  0,
2, 11,  0,  4,  0,  0,  7,  7,  5, 12,  0,  1)
ship <- rep(LETTERS[1:5], rep(8,5)) # 5 groups
year <- rep(rep(c("60-64", "65-69", "70-74","75-79"), rep(2,4)), 5) # 4 groups
period <- rep(c("60-74", "75-79"), 20) # 2 groups
wave <- data.frame(ship, year, period, month, damage)
wave
wave.glm1 <- glm(damage~ship+year+period+offset(log(month)), family=poisson, data=wave, subset=month>0)
summary(wave.glm1) # n = 34, p= 5-1 + 4-1 + 2-1 + 1= 9
wave.glm1 <- glm(damage~ship+year+period+offset(log(month)), family=poisson, data=wave, subset=month>0)
summary(wave.glm1)
wave
wave.glm1 <- glm(damage~ship+year+period+offset(log(month)), family=poisson, data=wave, subset=month>0)
summary(wave.glm1)
wave.glm1 <- glm(damage~ship+year+period+offset(log(month)), family=poisson, data= wave, subset=month>0)
summary(wave.glm1)
View(wave)
wave.glm2 <- glm(damage~ship*year+period+offset(log(month)), family= poisson(link=log), data=wave, subset=month>0)
summary(wave.glm2)
12 +  (5-1) + (4 -1) + (2 - 1) + 1
34-21
View(crab)
phi= G1/(173-2)
phi= G1/(173-2)
phi
crab.M1$deviance/crab.M1$df.residual
res.p1 = residuals(crab.M1, type = 'pearson',data = crab)
G1 = sum(res.p1^2)
G1
pchisq(crab.M1, df =  171)
df = n - p = 173 - 2
df = 173 - 2
1 - pchisq(crab.M1, df = df)
1 - pchisq(G1, df = df)
deviance(crab.M1)
D = deviance(crab.M1)
1 - pchisq(D, df = df)
crab.M2 <- glm(Sa ~ Wt + W, family = poisson(link = log), data = crab)
summary(crab.M2)
View(wave.glm1)
View(crab.M1)
crab.M1$deviance - crab.M2$deviance
D.test = crab.M1$deviance - crab.M2$deviance
D.test
D.test = crab.M1$deviance - crab.M2$deviance
df.test =  171 - 170 = 1
pval.test = 1 - pchisq(test.stat, df = df.test) # chisq test
pval.test
D.stat = crab.M1$deviance - crab.M2$deviance
df.test =  171 - 170
pval.test = 1 - pchisq(D.stat, df = df.test) # chisq test
pval.test
pval.test
res.p2 = residuals(crab.M2, type = 'pearson', data = crab)
# exactly the same as pearson residual for wave.glm3
G1 = sum(res.p2^2)
G1
phi = G1/(173-3) ## Estimate the dispersion parameter;
phi
crab.M2$deviance/crab.M2$df.residual
summary(crab.M2, dispersion = phi)
summary(crab.M2, dispersion = phi)
plot(qnorm((173+ 1:173+0.5)/(2*173+ 1.125)),sort(abs(res.p2)),
xlab= 'Expected Half-Normal Order Stats', ylab='Ordered Abs Pearson Residuals')
abline(a=0,b=1)
abline(a=0,b=sqrt(phi),lty=2)
summary(crab.M2)
F.stat = test.stat/(df*phi)
pval= 1-pf(F.stat, df, 3 )
pval
F.stat = D.stat/(df*phi)
pval= 1-pf(F.stat, df, 3 )
pval
F.stat = D.stat/(df*phi)
pval = 1 - pf(F.stat, df, 173 - 2 -3 )
pval
pval
summary(crab.M2, dispersion = phi)
dispersion.M = summary(crab.M2, dispersion = phi)
D.stat = dispersion.M$deviance - crab.M2$deviance
df.test =  171 - 170
pval.test = 1 - pchisq(D.stat, df = df.test) # chisq test
pval.test
dispersion.M$deviance - crab.M2$deviance
dispersion.M$deviance
crab.M2$deviance
## Methods 1: Genearalized Pearson Chi-square
res.p1 = residuals(crab.M2, type = 'pearson',data = crab)
G1 = sum(res.p1^2) # calc dispersion param based on full model
## [1] 544.157
df2 = 173 - 3
1 - pchisq(G1, df = df2)
G1
exp(0.44744)
parasite_raw
parasite_raw = read.table('./HW5-parasite.txt', header = T)
parasite_raw
View(parasite_raw)
parasite.M1 <- glm( Intensity ~ Length + Area + year, family = poisson(link = log), data = parasite_raw )
summary(parasite.M1)
parasite.M1 <- glm( Intensity ~ Length + Area + Year, family = poisson(link = log), data = parasite_raw )
summary(parasite.M1)
crab.nb = glm.nb(Intensity ~ offset(log(Length)) + Area + Year, family = poisson(link = log), data = parasite_raw)
summary(crab.nb)
library(MASS)
crab.nb = glm.nb(Intensity ~ offset(log(Length)) + Area + Year, family = poisson(link = log), data = parasite_raw)
summary(crab.nb)
crab.nb = glm.nb(Intensity ~ offset(log(Length)) + Area + Year, data = parasite_raw)
summary(crab.nb)
exp(-0.02972)
exp(0.6201)
library(pscl)
res.p3 = residuals(ps, type = 'pearson',data = parasite_raw)
G3 = sum(res.p3^2)
res.p3 = residuals(ps.nb, type = 'pearson',data = parasite_raw)
G3 = sum(res.p3^2)
library(MASS)
parasite_raw = read.table('./HW5-parasite.txt', header = T)
ps.nb = glm.nb(Intensity ~ offset(log(Length)) + Area + Year, data = parasite_raw)
summary(ps)
library(MASS)
parasite_raw = read.table('./HW5-parasite.txt', header = T)
ps.nb = glm.nb(Intensity ~ offset(log(Length)) + Area + Year, data = parasite_raw)
summary(ps.nb)
res.p3 = residuals(ps.nb, type = 'pearson',data = parasite_raw)
G3 = sum(res.p3^2)
G3
parasite_raw = parasite_raw %>%
mutate(Area = as.factor(Area),
Year = as.factor(Year) )
parasite_raw
ps.nb = glm.nb(Intensity ~ offset(log(Length)) + Area + Year, data = parasite_raw)
summary(ps.nb)
df2 = 1254 - (4 - 1) - (3 - 1) - 1
1 - pchisq(G2, df = df3)
# Chunk 1
## 1.Active packages
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# Chunk 2
# import in the crab data
crab = read.table('./HW5-crab.txt', header = T)
# test if there is obs = 0 for W and Wt, no 0 exists for model
nrow(crab)
nrow(subset(crab, crab$W > 0))
nrow(subset(crab, crab$Sa > 0))
crab.M1 <- glm(crab$Sa~W, family = poisson(link = log), data = crab)
summary(crab.M1)
# n = 173, beta0 =-3.30476, beta1 = 0.16405
anova(crab.M1)
# Chunk 3
## we may suspect some outliers from the simple Y-X scatter plot;
ggplot(data = crab, aes(x = W, y = Sa )) +
geom_point(shape = 1)  +
geom_smooth(method = glm)
## fit the log model:
ggplot(data = crab, aes(x = log(W + 1), y = Sa )) +
geom_point(shape = 1)  +
geom_smooth(method = glm)
## Identify outliers
plot(residuals(crab.M1, type = "deviance"))
# Chunk 4
## Methods 1: Genearalized Pearson Chi-square
res.p1 = residuals(crab.M1, type = 'pearson',data = crab)
G1 = sum(res.p1^2) # calc dispersion param based on full model
## [1] 544.157
df = 173 - 2
1 - pchisq(G1, df = df) ##
## [2] df = 171, p-value = 0
## Alternative Methods: Deviance Analysis
D = deviance(crab.M1)
## [1] 567.8786
1 - pchisq(D, df = df)
## [2] p-value = 0, means
# Chunk 5
## There is offset in this dataset
crab.M2 <- glm(Sa ~ Wt + W, family = poisson(link = log), data = crab)
summary(crab.M2)
# Chunk 6
D.stat = crab.M1$deviance - crab.M2$deviance
df.test =  171 - 170
pval.test = 1 - pchisq(D.stat, df = df.test) # chisq test
pval.test
# Chunk 7
# the traditional way of calc constant dispersion parameter
res.p2 = residuals(crab.M2, type = 'pearson', data = crab)
G1 = sum(res.p2^2)
# Generalized-chi-square: 536.5963
## Estimate the dispersion parameter
phi = G1/(173 - 3)
phi # 3.15644
crab.M2$deviance/crab.M2$df.residual
# 3.293442
# Chunk 8
plot(qnorm((173+ 1:173+0.5)/(2*173+ 1.125)),sort(abs(res.p2)),
xlab= 'Expected Half-Normal Order Stats', ylab='Ordered Abs Pearson Residuals')
abline(a=0,b=1)
abline(a=0,b=sqrt(phi),lty=2)
# Conclusion:
# This because of the outliers, but not the overdispersion that leads to lack of fit.
# This one captured a few points at the end, most of points fall around the reference line.
# Perhaps remove the outliers;
# Chunk 9
## Adjusting for Overdispersion: phi parameter
dispersion.M = summary(crab.M2, dispersion = phi)
# Chunk 10
## Methods 1: Genearalized Pearson Chi-square
res.p1 = residuals(crab.M2, type = 'pearson',data = crab)
G2 = sum(res.p1^2) # calc dispersion param based on full model
## [1] 536.5963
df2 = 173 - 3
1 - pchisq(G2, df = df2) ##
## df = 170, p-value = 0
# Chunk 11
library(MASS)
parasite_raw = read.table('./HW5-parasite.txt', header = T)
parasite_raw = parasite_raw %>%
mutate(Area = as.factor(Area),
Year = as.factor(Year) )
ps.nb = glm.nb(Intensity ~ offset(log(Length)) + Area + Year, data = parasite_raw)
summary(ps.nb)
## Area:0.62208 ; Year: -0.32263
# Chunk 12
## Genearalized Pearson Chi-square
res.p3 = residuals(ps.nb, type = 'pearson',data = parasite_raw)
G3 = sum(res.p3^2) # calc dispersion param based on full model
## [1] 2120.556
df3 = 1254 - (4 - 1) - (3 - 1) - 1
1 - pchisq(G2, df = df3) ##
## df = 170, p-value = 0
library(pscl)
m1 <- zeroinfl( Intensity ~  length + Area + Year, data = parasite_raw)
# child and camper for poisson, persons for binary
summary(m1)
library(pscl)
m1 <- zeroinfl( Intensity ~  Length + Area + Year, data = parasite_raw)
# child and camper for poisson, persons for binary
summary(m1)
pr <- predict(m1,type = "zero")  # pi(do not fish)
mu <- predict(m1,type = "count")
zip <- pr + (1 - pr)*exp(-mu)
zip
pr
summary(m1)
exp(0.718676)
2.0517-1
exp(0.456535)
exp( 0.718676)
exp(-0.7521)
1 - 0.4714
exp(-0.009889)
1-.9901597
exp(-1.022868)
exp(0.6577)
exp(-1.0229)
1 - 0.3596
exp(0.2689)
exp(0.6577)
exp(0.3919)
exp(-0.0448)
1- 0.9562
exp(0.9448)
exp(-0.009889)
exp(-0.0368067)
# Chunk 1
## 1.Active packages
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# Chunk 2
# import in the crab data
crab = read.table('./HW5-crab.txt', header = T)
# test if there is obs = 0 for W and Wt, no 0 exists for model
nrow(crab)
nrow(subset(crab, crab$W > 0))
crab.M1 <- glm(crab$Sa~W, family = poisson(link = log), data = crab)
summary(crab.M1)
# n = 173, beta0 =-3.30476, beta1 = 0.16405
anova(crab.M1)
# Chunk 3
## we may suspect some outliers from the simple Y-X scatter plot;
ggplot(data = crab, aes(x = W, y = Sa )) +
geom_point(shape = 1)  +
geom_smooth(method = glm)
## fit the log model:
ggplot(data = crab, aes(x = log(W + 1), y = Sa )) +
geom_point(shape = 1)  +
geom_smooth(method = glm)
# Chunk 4
## Methods 1: Genearalized Pearson Chi-square
res.p1 = residuals(crab.M1, type = 'pearson',data = crab)
G1 = sum(res.p1^2) # calc dispersion param based on full model
## [1] 544.157
df = 173 - 2
1 - pchisq(G1, df = df) ##
## [2] df = 171, p-value = 0
## Alternative Methods: Deviance Analysis
D = deviance(crab.M1)
## [1] 567.8786
1 - pchisq(D, df = df)
## [2] p-value = 0, means
# Chunk 5
## There is offset in this dataset
crab.M2 <- glm(Sa ~ Wt + W, family = poisson(link = log), data = crab)
summary(crab.M2)
# Chunk 6
D.stat = crab.M1$deviance - crab.M2$deviance
df.test =  171 - 170
pval.test = 1 - pchisq(D.stat, df = df.test) # chisq test
pval.test
# Chunk 7
# the traditional way of calc constant dispersion parameter
res.p2 = residuals(crab.M2, type = 'pearson', data = crab)
G1 = sum(res.p2^2)
# Generalized-chi-square: 536.5963
## Estimate the dispersion parameter
phi = G1/(173 - 3)
phi # 3.15644
crab.M2$deviance/crab.M2$df.residual
# 3.293442
# Chunk 8
plot(qnorm((173+ 1:173+0.5)/(2*173+ 1.125)),sort(abs(res.p2)),
xlab= 'Expected Half-Normal Order Stats', ylab= 'Ordered Abs Pearson Residuals')
abline(a=0,b=1)
abline(a=0,b=sqrt(phi),lty=2)
# Chunk 9
## Adjusting for Overdispersion: phi parameter
dispersion.M = summary(crab.M2, dispersion = phi)
# Chunk 10
## Methods 1: Genearalized Pearson Chi-square
res.p1 = residuals(crab.M2, type = 'pearson',data = crab)
G2 = sum(res.p1^2) # calc dispersion param based on full model
## [1] 536.5963
df2 = 173 - 3
1 - pchisq(G2, df = df2) ##
## df = 170, p-value = 0
library(MASS)
parasite_raw = read.table('./HW5-parasite.txt', header = T)
parasite_raw = parasite_raw %>%
mutate(Area = as.factor(Area),
Year = as.factor(Year) )
ps.nb = glm.nb(Intensity ~ length + Area + Year, data = parasite_raw)
summary(ps.nb)
library(MASS)
parasite_raw = read.table('./HW5-parasite.txt', header = T)
parasite_raw = parasite_raw %>%
mutate(Area = as.factor(Area),
Year = as.factor(Year) )
ps.nb = glm.nb(Intensity ~ length + Area + Year, data = parasite_raw)
summary(ps.nb)
## Area:0.62208 ; Year: -0.32263
parasite_raw = read.table('./HW5-parasite.txt', header = T)
parasite_raw = parasite_raw %>%
mutate(Area = as.factor(Area),
Year = as.factor(Year) )
ps.nb = glm.nb(Intensity ~ Length + Area + Year, data = parasite_raw)
summary(ps.nb)
exp(-0.0233)
exp(1.3483)
exp90.690898
exp(0.690898)
res.p3 = residuals(ps.nb, type = 'pearson',data = parasite_raw)
G3 = sum(res.p3^2)
G3
df3 = 1254 - (4 - 1) - (3 - 1) - 1
1 - pchisq(G2, df = df3)
summary(ps.nb)
1254 - (4 - 1) - (3 - 1) - 1
nrow(parasite_raw)
1254 - (4 - 1) - (3 - 1) - 1 - 1
1 - pchisq(G2, df = 1185)
nrow(subset(parasite_raw, parasite_raw$Intensity > 0))
nrow(subset(parasite_raw, parasite_raw$Intensity == 0))
ps.glm = glm(Intensity ~ Length + Area + Year, data = parasite_raw, family = poisson)
summary(ps.glm)
res.p3 = residuals(ps.glm, type = 'pearson',data = parasite_raw)
G3 = sum(res.p3^2) # calc dispersion param based on full model
## [1] 1814.287
df3 = 1254 - (4 - 1) - (3 - 1) - 1 - 1
1 - pchisq(G2, df = 1185)
G3
library(MASS)
parasite_raw = read.table('./HW5-parasite.txt', header = T)
parasite_raw = parasite_raw %>%
mutate(Area = as.factor(Area),
Year = as.factor(Year) )
ps.glm = glm(Intensity ~ Length + Area + Year, data = parasite_raw, family = poisson(link = log))
summary(ps.glm)
missing(parasite_raw$Intensity)
is.na(missing(parasite_raw$Intensity))
is.na(parasite_raw$Intensity)
colSums(is.na(parasite_raw))
colSums(is.na(parasite_raw))
1254 - 57 - (4 - 1) - (3 - 1) - 1 - 1
summary(ps.glm)
colSums(is.na(parasite_raw))
df3 = (1254 - 57 - 6) - (4 - 1) - (3 - 1) - 1 - 1
df3
na.omit(parasite_raw)
parasite_raw = na.omit(parasite_raw)
nrow(parasite_raw)
1254 - 57 - 5
summary(ps.glm)
(1254 - 57 - 5) - (4 - 1) - (3 - 1) - 1 - 1
library(MASS)
parasite_raw = read.table('./HW5-parasite.txt', header = T)
parasite_raw = parasite_raw %>%
mutate(Area = as.factor(Area),
Year = as.factor(Year) )
ps.glm = glm(Intensity ~ Length + Area + Year, data = parasite_raw, family = poisson(link = log))
summary(ps.glm)
(1254 - 63) - (4 - 1) - (3 - 1) - 1
library(MASS)
parasite_raw = read.table('./HW5-parasite.txt', header = T)
parasite_raw = parasite_raw %>%
mutate(Area = as.factor(Area),
Year = as.factor(Year) )
##test missing values in N.
colSums(is.na(parasite_raw))
ps.glm = glm(Intensity ~ Length + Area + Year, data = parasite_raw, family = poisson(link = log))
summary(ps.glm)
exp(-0.0284)
exp(-0.211955)
exp(-0.2181393 )
exp(0.6702801)
exp(1.4049366)
exp(2.6431709)
exp(-0.1168602)
res.p3 = residuals(ps.glm, type = 'pearson',data = parasite_raw)
G3 = sum(res.p3^2) # calc dispersion param based on full model
## [1] 42164.97
df3 = (1254 - 63) - (4 - 1) - (3 - 1) - 1  ## (n - missing) - p
1 - pchisq(G2, df = df3)
G3
parasite_raw = na.omit(parasite_raw)
nrow(parasite_raw)
library(MASS)
parasite_raw = read.table('./HW5-parasite.txt', header = T)
parasite_raw = parasite_raw %>%
mutate(Area = as.factor(Area),
Year = as.factor(Year) )
##test missing values in N.
colSums(is.na(parasite_raw))
parasite_raw = na.omit(parasite_raw)
ps.glm = glm(Intensity ~ Length + Area + Year, data = parasite_raw, family = poisson(link = log))
summary(ps.glm)
## Genearalized Pearson Chi-square
res.p3 = residuals(ps.glm, type = 'pearson')
G3 = sum(res.p3^2) # calc dispersion param based on full model
G3
df3 = (1254 - 63) - (4 - 1) - (3 - 1) - 1  ## (n - missing) - p
1 - pchisq(G2, df = df3)
D3 = deviance(ps.glm)
1 - pchisq(D3, df = df3)
D3
1 - pchisq(D3, df = df3)
1 - pchisq(G3, df = df3)
nrow(subset(parasite_raw, parasite_raw$Intensity == 0))
