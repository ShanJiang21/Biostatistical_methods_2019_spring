med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df)
## create an indicator variable for housing conditions
library(nnet)
## Fit nominal model
copen.mult <- multinom(cbind(res.low, res.med, res.hig) ~
contact + house, data = copen_raw)
summary(copen.mult)
copen.df %>%
group_by(contact)
copen.df %>%
group_by(contact) %>%
sum(rowsum = n())
copen.df %>%
group_by(contact) %>%
sum(n= n())
copen.df %>%
group_by(contact) %>%
sum(n= sum(contact))
copen.df %>%
group_by(contact)
copen.df %>%
group_by(contact) %>%
sum(n= sum(total))
copen.df %>%
group_by(contact) %>%
mutate( rowsum = sum(total))
knitr::kable(copen.df)
copen.df %>%
group_by(contact) %>%
mutate( rowsum = sum(total),
contact.p = contact.p / rowsum)
copen.df %>%
group_by(contact) %>%
mutate( rowsum = sum(total),
contact.p =  total/ rowsum)
copen.df = copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
group_by(contact) %>%
mutate( rowsum = sum(total),
contact.p =  total/ rowsum) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total, contact.p)
knitr::kable(copen.df)
copen.df = copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
group_by(contact) %>%
mutate( rowsum = sum(total),
contact.p =  percent(total/ rowsum)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total, contact.p)
knitr::kable(copen.df)
copen.df = copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
group_by(contact) %>%
mutate( rowsum = sum(total),
contact.p =  percent(total/rowsum)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total, contact.p)
knitr::kable(copen.df)
percent(total/rowsum)
copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
group_by(contact) %>%
mutate( rowsum = sum(total),
contact.p =  percent(total/rowsum)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total, contact.p)
copen.df = copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
group_by(contact) %>%
mutate( rowsum = sum(total),
contact.p =  total/rowsum) %>%
mutate(contact.p = percent(contact.p)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total, contact.p)
knitr::kable(copen.df)
copen.df = copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total, contact.p)
copen.df = copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df)
copen_raw %>%
group_by(contact)
copen_raw %>%
group_by(house)
copen_raw %>%
group_by(house) %>%
mutate(rowSums(res.low, res.med,res.hig))
copen_raw %>%
group_by(house) %>%
mutate(total = rowSums(res.low, res.med,res.hig))
rowSums(res.low, res.med,res.hig)
copen_raw %>%
group_by(house) %>%
mutate(total = res.low + res.med + res.hig))
copen_raw %>%
group_by(house) %>%
mutate(total = res.low + res.med + res.hig)
copen_raw %>%
group_by(house) %>%
mutate(total = res.low + res.med + res.hig) %>%
filter(house = "Tower block")
copen_raw %>%
group_by(house) %>%
mutate(total = res.low + res.med + res.hig) %>%
filter(house == "Tower block")
copen.df1
copen.df1 = copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
copen.df1
219+ 181
317+ 448
177 + 339
percent = c(count/sum(400, 765, 516))
count = c(400, 765, 516)
percent = c(count/sum(400, 765, 516))
percent
house_type = c("Tower block", "Apartment", "House")
count = c(400, 765, 516)
percent =c( percent(count/sum(400, 765, 516)))
percent
rbind(house_type,count, percent)
sum_contact = rbind(house_type,count, percent)
sum_contact
bind_rows(house_type,count, percent)
house_type = c("Tower block", "Apartment", "House")
count = c(400, 765, 516)
percent = c( percent(count/sum(400, 765, 516)))
sum_contact = rbind(house_type,count, percent)
knitr::kable(sum_contact, caption = "Table 2")
house_type = c("Tower block", "Apartment", "House")
count = c(400, 765, 516)
percent = c( percent(count/sum(400, 765, 516)))
sum_contact = rbind(house_type,count, percent)
sum_contact
sum_contact = data.frame(house_type,count, percent)
sum_contact
knitr::kable(sum_contact, caption = "Table 2")
copen.ord %>% group_by(contact) %>% sum(n = n())
copen.ord %>% group_by(contact)
copen.ord %>% group_by(contact) %>% sum(n = sum(freq))
copen.ord %>% group_by(contact)
View(copen_raw)
View(copen.df)
219+317+177
181 + 448 + 339
contact = c("low", "high")
count = c(713, 968)
percent = c( percent(count/sum(713, 968)))
sum_house = data.frame(contact,count, percent)
knitr::kable(sum_contact, caption = "Table 3")
contact = c("low", "high")
count = c(713, 968)
percent = c( percent(count/sum(713, 968)))
sum_house = data.frame(contact,count, percent)
knitr::kable(sum_house, caption = "Table 3")
house_type = c("Tower block", "Apartment", "House")
count = c(400, 765, 516)
percent = c( percent(count/sum(400, 765, 516)))
sum_house = data.frame(house_type,count, percent)
knitr::kable(sum_house, caption = "Table 2")
copen.df1[3,] + copen.df1[6,]
sum(copen.df1[3,], copen.df1[6,])
copen.df1 %>%
filter(contact = "low")
copen.df1 %>%
filter(contact == "low")
house_type = c("Tower block", "Apartment", "House")
count = c(400, 765, 516)
percent = c( percent(count/sum(400, 765, 516)))
sum_house = data.frame(house_type,count, percent)
knitr::kable(sum_house, caption = "Table 2")
View(copen_raw)
View(copen.df)
numsamp = (3 - 1) * 6 # degree of freedom for grouped data (obs = 6, category = 3, reference -1)
numparam = 2 + 3 # total num of param: 2 model intercepts + 3 parameters (same in 2 models)
pval = 1- pchisq(G ,df = numsamp - numparam)
pihat = predict(copen.mult,type = 'probs')
## pihat: print out the pi(i, j) hats corresponding to the data obs.
m = rowSums(copen_raw[,1:3])
res.pearson = (copen_raw[,1:3] - pihat*m)/sqrt(pihat*m) # pearson residuals
res.pearson
# deviance
D.stat =  sum(2 * copen_raw[,1:3] * log(copen_raw[,1:3]/(m * pihat)))
D.stat
# Generalized Pearson Chisq Stat
G.stat = sum(res.pearson^2)
G.stat
numsamp = (3 - 1) * 6 # degree of freedom for grouped data (obs = 6, category = 3, reference -1)
numparam = 2 + 3 # total num of param: 2 model intercepts + 3 parameters (same in 2 models)
pval = 1- pchisq(G.stat,df = numsamp - numparam)
pval
copen_raw
# deviance analysis
D.stat1-D.stat # chisq(2)
pval = 1- pchisq(G.stat,df = (6 - 4) * (3 - 1))
pval
summary(copen.mult)$coefficients
exp(summary(copen.mult)$coefficients)
exp(summary(copen.mult)$coefficients - 1.96 * summary(copen.mult)$standard.errors)[1,]
### higher bound:
exp(summary(copen.mult)$coefficients + 1.96 * summary(copen.mult)$standard.errors)[1,]
exp(summary(copen.mult)$coefficients)
exp(summary(copen.mult)$coefficients)[2,]
exp(summary(copen.mult)$coefficients)[1,]
exp(summary(copen.mult)$coefficients)
exp(summary(copen.mult)$coefficients - 1.96 * summary(copen.mult)$standard.errors)[2,]
## higher bound
exp(summary(copen.mult)$coefficients + 1.96 * summary(copen.mult)$standard.errors)[2,]
copen.df1 = copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df1, caption = "Table 1")
## 1.Active packages
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# import in the copenhagen data
copen_raw <- data.frame(res.low = c(65, 130, 67, 34, 141, 130),         res.med = c(54, 76, 48, 47, 116, 105),
res.hig = c(100, 111, 62, 100, 191, 104),
contact = c(rep("low", 3), rep("high",3)),
house = rep(c("Tower block", "Apartment", "House"), 2) )
copen_raw$house = factor(copen_raw$house,
levels = c("Tower block", "Apartment", "House"))
copen_raw$contact  = factor(copen_raw$contact,
levels = c("low", "high"))
copen.df1 = copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df1, caption = "Table 1")
copen.df1 %>%
copen.df1 %>%
dplyr::select(-house)
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p) )
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact)
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
sum(n = n(total))
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
sum(n = sum(total))
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact)
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact)
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
summarise_each(funs(sum))
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
dplyr::select(contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
copen.df2 = copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
dplyr::select(contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
copen.df2 = copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
copen.df2
copen.df2 %>%
dplyr::select(contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
## categorical tables by contact and house
copen.df1 = copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df1, caption = "")
## Pair wise table of contact
copen.df2 = copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
copen.df2 = copen.df2 %>%
dplyr::select(contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df2, caption = "")
copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(house) %>%
summarise_each(funs(sum))
copen.df1 %>%
dplyr::select(-c(contact, low.p, med.p, hig.p)) %>%
group_by(house)
copen.df1 %>%
dplyr::select(-c(contact, low.p, med.p, hig.p)) %>%
group_by(house) %>%
summarise_each(funs(sum))
copen.df3 = copen.df1 %>%
dplyr::select(-c(contact, low.p, med.p, hig.p)) %>%
group_by(house) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
copen.df3
copen.df3 = copen.df3 %>%
dplyr::select(contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
copen.df3 = copen.df3 %>%
dplyr::select(house, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df3, caption = "")
## Pair wise table of contact
copen.df2 = copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
copen.df2 = copen.df2 %>%
dplyr::select(contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df2, caption = "")
## Pair wise table of house
copen.df3 = copen.df1 %>%
dplyr::select(-c(contact, low.p, med.p, hig.p)) %>%
group_by(house) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
copen.df3 = copen.df3 %>%
dplyr::select(house, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df3, caption = "")
## Pair wise table of contact
copen.df2 = copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
copen.df2 = copen.df2 %>%
dplyr::select(contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df2, caption = "")
## 95% confidence Interval of odds ratio
### model 1
### OR
exp(summary(copen.mult)$coefficients)[1,]
## 1.Active packages
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# import in the copenhagen data
copen_raw <- data.frame(res.low = c(65, 130, 67, 34, 141, 130),         res.med = c(54, 76, 48, 47, 116, 105),
res.hig = c(100, 111, 62, 100, 191, 104),
contact = c(rep("low", 3), rep("high",3)),
house = rep(c("Tower block", "Apartment", "House"), 2) )
copen_raw$house = factor(copen_raw$house,
levels = c("Tower block", "Apartment", "House"))
copen_raw$contact  = factor(copen_raw$contact,
levels = c("low", "high"))
## categorical tables by contact and house
copen.df1 = copen_raw %>%
mutate(total = res.low + res.med + res.hig) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total)) %>%
dplyr::select(house, contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df1, caption = "")
## Pair wise table of house
copen.df3 = copen.df1 %>%
dplyr::select(-c(contact, low.p, med.p, hig.p)) %>%
group_by(house) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
copen.df3 = copen.df3 %>%
dplyr::select(house, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df3, caption = "")
## Pair wise table of contact
copen.df2 = copen.df1 %>%
dplyr::select(-c(house, low.p, med.p, hig.p)) %>%
group_by(contact) %>%
summarise_each(funs(sum)) %>%
mutate(low.p =  percent(res.low / total),
med.p =  percent(res.med / total),
hig.p = percent(res.hig / total))
copen.df2 = copen.df2 %>%
dplyr::select(contact, res.low,
low.p, res.med, med.p, res.hig, hig.p, total)
knitr::kable(copen.df2, caption = "")
## create an indicator variable for housing conditions
library(nnet)
## Fit nominal model
copen.mult <- multinom(cbind(res.low, res.med, res.hig) ~
contact + house, data = copen_raw)
summary(copen.mult)
stargazer::stargazer(copen.mult, header = T )
## 95% confidence Interval of odds ratio
### model 1
### OR
exp(summary(copen.mult)$coefficients)[1,]
### lower bound:
exp(summary(copen.mult)$coefficients - 1.96 * summary(copen.mult)$standard.errors)[1,]
### higher bound:
exp(summary(copen.mult)$coefficients + 1.96 * summary(copen.mult)$standard.errors)[1,]
## model 2
### OR
exp(summary(copen.mult)$coefficients)[2,]
## lower bound
exp(summary(copen.mult)$coefficients - 1.96 * summary(copen.mult)$standard.errors)[2,]
## higher bound
exp(summary(copen.mult)$coefficients + 1.96 * summary(copen.mult)$standard.errors)[2,]
## model 2
### OR
exp(summary(copen.mult)$coefficients)[2,]
## lower bound
exp(summary(copen.mult)$coefficients - 1.96 * summary(copen.mult)$standard.errors)[2,]
## higher bound
exp(summary(copen.mult)$coefficients + 1.96 * summary(copen.mult)$standard.errors)[2,]
