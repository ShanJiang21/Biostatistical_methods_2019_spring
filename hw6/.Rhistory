# Chunk 1
## 1.Active packages
library(nlme)
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# Chunk 2
# import in data
distance <- read.table("./HW6-dental.txt",header=TRUE,sep=",")
head(distance)
View(distance)
# Chunk 1
## 1.Active packages
library(nlme)
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# Chunk 2
# import in data
distance <- read.table("./HW6-dental.txt",sep="\t", header=TRUE)
head(distance)
# Chunk 1
## 1.Active packages
library(nlme)
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# Chunk 2
# import in data
distance <- read.table("./HW6-dental.txt",sep ="\t", header=TRUE)
head(distance)
# import in data
distance <- read.table("./HW6-dental.txt",sep = '\t', header= T, quote='', comment='')
head(distance)
# Chunk 1
## 1.Active packages
library(nlme)
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# Chunk 2
# import in data
distance <- read.table("./HW6-dental.txt",sep = '\t', header= T, quote='', comment='')
head(distance)
View(distance)
# import in data
distance <- read.table("./HW6-dental.txt",sep = '\t', header= F, quote='', comment='')
head(distance)
# import in data
distance <- read.table("./HW6-dental.txt",sep = '\t', header= F, quote='', comment='',  skip = 1)
head(distance)
# import in data
distance <- read.table("./HW6-dental.txt",sep = '\t', header= F, skip = 1)
head(distance)
# import in data
distance <- read.table("./HW6-dental.txt",sep = '\t', header = F, skip = 1)
head(distance)
# import in data
distance <- read.delim("./HW6-dental.txt",sep = '\t', header = F, skip = 1)
head(distance)
# import in data
distance <- read.delim("./HW6-dental.txt",sep = '\t', header = F, skip = 1)
head(distance)
# import in data
distance <- read.delim("./HW6-dental.txt",sep = ' ', header = F, skip = 1)
head(distance)
# import in data
distance <- read.delim("./HW6-dental.txt",sep = '', header = T)
head(distance)
p = ggplot(distance, aes(distance, age, group = Index)) + geom_line()
print(p)
p = ggplot(distance, aes(distance, Age, group = Index)) + geom_line()
print(p)
p = ggplot(distance, aes(distance, Age, group = Gender)) + geom_line()
print(p)
library(nlme)
library(ggplot2)
opposites <- read.table("https://stats.idre.ucla.edu/stat/r/examples/alda/data/opposites_pp.txt",header=TRUE,sep=",")
head(opposites)
# spaghetti plot
p = ggplot(opposites, aes(time, opp, group=id)) + geom_line()
print(p)
# import in data
distance <- read.delim("./HW6-dental.txt",sep = '', header = T)
head(distance)
p = ggplot(distance, aes(Distance, Age, group = Gender)) + geom_line()
print(p)
p = ggplot(distance, aes(Distance, Age, group = Index)) + geom_line()
print(p)
p = ggplot(distance, aes(Age, Distance, group = Gender)) + geom_line()
print(p)
p = ggplot(distance, aes(Age, Distance, group = Index)) + geom_line()
print(p)
p = ggplot(distance, aes(Age, Distance, group = Gender)) + geom_line()
print(p)
p = ggplot(distance, aes(x= Age, y = Distance)) + geom_line(group = Gender)
print(p)
p = ggplot(distance, aes(x= Age, y = Distance)) + geom_line(aes(group = Gender))
print(p)
p = ggplot(distance, aes(x = Age, y = Distance)) +
geom_line(aes(group = Gender))
print(p)
p = ggplot(distance, aes(x = Age, y = Distance)) +
geom_line(aes()) + facet_grid(.~gender)
print(p)
p = ggplot(distance, aes(x = Age, y = Distance)) +
geom_line(aes()) + facet_grid(.~Gender)
print(p)
p = ggplot(distance, aes(x = Age, y = Distance)) +
geom_line(aes(Group = Gender))
print(p)
p = ggplot(distance, aes(x = Age, y = Distance, Group = Gender)) +
geom_line(aes(color = Gender))
print(p)
class(distance$Gender)
distance$Gender = as.factor(distance$Gender)
p = ggplot(distance, aes(x = Age, y = Distance, Group = Gender)) +
geom_line(aes(color = Gender))
print(p)
library(nlme)
library(ggplot2)
opposites <- read.table("https://stats.idre.ucla.edu/stat/r/examples/alda/data/opposites_pp.txt",header=TRUE,sep=",")
head(opposites)
# spaghetti plot
p = ggplot(opposites, aes(time, opp, group=id)) + geom_line()
print(p)
head(distance)
p = ggplot(distance, aes(x = Age, y = Distance, group = Child)) +
geom_line(aes(color = Gender))
print(p)
gls(Distance~ Gender*Age, distance, correlation = corSymm(form = ~ 1 | Child),
weights = varIdent(form = ~ 1| Age),method = "REML")
gls(Distance~ Gender+Age, distance, correlation = corSymm(form = ~ 1 | Child),
weights = varIdent(form = ~ 1| Age),method = "REML")
?gls
exp1 <- gls(~time ,opposites, correlation = corExp(form = ~ 1 |id), method ="REML")
summary(exp1)
corMatrix(exp1$modelStruct$corStruct)[[1]]
# AR(1)
auto1 <- gls(~time ,opposites, correlation = corAR1(form = ~ 1 |Child), method = "REML")
summary(auto1)
corMatrix(auto1$modelStruct$corStruct)[[1]]
# AR(1)
auto1 <- gls(~time ,opposites, correlation = corAR1(form = ~ 1 |Child), method = "REML")
summary(auto1)
corMatrix(auto1$modelStruct$corStruct)[[1]]
exp1 <- gls(Distance ~ Gender + Age, distance, correlation = corExp(form = ~ 1 |Child), method = "REML")
summary(exp1)
corMatrix(exp1$modelStruct$corStruct)[[1]]
# AR(1)
auto1 <- gls(Distance ~ Gender + Age, distance, correlation = corAR1(form = ~ 1 |Child), method = "REML")
summary(auto1)
corMatrix(auto1$modelStruct$corStruct)[[1]]
# AR(1)
auto1 <- gls(Distance ~ Gender + Age, distance,
correlation = corAR1(form = ~ 1 |Child), method = "REML")
summary(auto1)
corMatrix(auto1$modelStruct$corStruct)[[1]]
gls(Distance ~ Gender + Age, distance, correlation = corSymm(form = ~ 1 | Child),
weights = varIdent(form = ~ 1| Age),method = "REML")
summary(comsym)
corMatrix(comsym$modelStruct$corStruct)[[1]]
comsym <- gls(Distance ~ Gender + Age, distance, correlation = corSymm(form = ~ 1 | Child),
weights = varIdent(form = ~ 1| Age),method = "REML")
summary(comsym)
corMatrix(comsym$modelStruct$corStruct)[[1]]
# Chunk 1
## 1.Active packages
library(nlme)
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# Chunk 1
## 1.Active packages
library(nlme)
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# Chunk 2
# import in data
distance <- read.delim("./HW6-dental.txt",sep = '', header = T)
head(distance)
# Chunk 1
## 1.Active packages
library(nlme)
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# Chunk 2
# import in data
distance <- read.delim("./HW6-dental.txt",sep = '', header = T)
head(distance)
# Chunk 3
p = ggplot(distance, aes(x = Age, y = Distance, group = Child)) +
geom_line(aes(color = as.factor(Gender)))
print(p)
# import in data
distance <- read.delim("./HW6-dental.txt",sep = '', header = T)
head(distance)
p = ggplot(distance, aes(x = Age, y = Distance, group = Child)) +
geom_line(aes(color = as.factor(Gender)))
print(p)
comsym <- gls(Distance ~ Gender + Age, distance, correlation = corSymm(form = ~ 1 | Child),
weights = varIdent(form = ~ 1| Age),method = "REML")
summary(comsym)
corMatrix(comsym$modelStruct$corStruct)[[1]]
exp1 <- gls(Distance ~ Gender + Age, distance, correlation = corExp(form = ~ 1 |Child), method = "REML")
summary(exp1)
corMatrix(exp1$modelStruct$corStruct)[[1]]
# AR(1)
auto1 <- gls(Distance ~ Gender + Age, distance,
correlation = corAR1(form = ~ 1 |Child), method = "REML")
summary(auto1)
corMatrix(auto1$modelStruct$corStruct)[[1]]
?corMatrix
exp1 <- gls(Distance ~ Gender + Age, distance, correlation = corExp(form = ~ 1 |Child), method = "REML")
summary(exp1)
corMatrix(exp1$modelStruct$corStruct)[[1]]
comsym <- gls(Distance ~ Gender + Age, distance, correlation = corSymm(form = ~ 1 | Child),
weights = varIdent(form = ~ 1| Age),method = "REML")
summary(comsym)
corMatrix(comsym$modelStruct$corStruct)[[1]]
sumtable <- matrix(c(2.045166,	2.418714,	2.418714,
0.674651,	0.65296,	0.65296), ncol=3,byrow=TRUE)
colnames(smoke) <- c("Compound", "Exponential", "AutoRegression")
rownames(smoke) <- c("Gender","Age")
sumtable <- as.table(sumtable)
sumtable
sumtable <- matrix(c(2.045166,	2.418714,	2.418714,
0.674651,	0.65296,	0.65296), ncol=3,byrow=TRUE)
colnames(sumtable) <- c("Compound", "Exponential", "AutoRegression")
rownames(sumtable) <- c("Gender","Age")
sumtable <- as.table(sumtable)
sumtable
# AR(1)
auto1 <- gls(Distance ~ Gender + Age, distance,
correlation = corAR1(form = ~ 1 |Child), method = "REML")
summary(auto1)
corMatrix(auto1$modelStruct$corStruct)[[1]]
exp1 <- gls(Distance ~ Gender + Age, distance, correlation = corExp(form = ~ 1 |Child), method = "REML")
summary(exp1)
corMatrix(exp1$modelStruct$corStruct)[[1]]
comsym <- gls(Distance ~ Gender + Age, distance, correlation = corSymm(form = ~ 1 | Child),
weights = varIdent(form = ~ 1| Age),method = "REML")
summary(comsym)
corMatrix(comsym$modelStruct$corStruct)[[1]]
?corMatrix
var(comsym$modelStruct$corStruct)
var(comsym$modelStruct$corStruct)[[1]]
comsym$modelStruct
comsym
var(comsym$modelStruct$corStruct)
cor2cov(corMatrix(auto1$modelStruct$corStruct)[[1]])
install.packages("fifer")
install_github("dustinfife/fifer")
install.packages("devtools")
library(devtools)
install_github("dustinfife/fifer")
install_github("dustinfife/fifer")
devtools::install_github(repo = "stefvanbuuren/mice")
devtools::install_github(repo = "stefvanbuuren/mice")
# this file contains code for linear marginal models for longitudinal data
# We test different covariance patterns and show how to fit model with WLS and REML
# also check lme4
library(nlme)
library(ggplot2)
opposites <- read.table("https://stats.idre.ucla.edu/stat/r/examples/alda/data/opposites_pp.txt",header=TRUE,sep=",")
head(opposites)
# spaghetti plot
p = ggplot(opposites, aes(time, opp, group=id)) + geom_line()
print(p)
# Fit different cov model with REML
###################################################
# unstructured covariance
unstruct <- gls(opp~time*ccog, opposites, correlation=corSymm(form = ~ 1 |id),  weights=varIdent(form = ~ 1| wave),method="REML")
# check ?gls ?corClasses ?corSymm
summary(unstruct) # focus on corr, var, (weight)
unstruct$modelStruct$corStruct # corr
unstruct$modelStruct$varStruct
?varIdent
sumtable
unstruct$sigma
unstruct
$modelStruct$corStruct
modelStruct$corStruct
auto1$sigma
(auto1$sigma)^2
corMatrix(auto1$modelStruct$corStruct)[[1]] * (auto1$sigma)^2
comcov = corMatrix(comsym$modelStruct$corStruct)[[1]] * (comsym$sigma)^2
exp1cov = corMatrix(exp1$modelStruct$corStruct)[[1]]  * (exp1$sigma)^2
autocov = corMatrix(auto1$modelStruct$corStruct)[[1]] * (auto1$sigma)^2
## Reverse back by multiplying the variance.
comcov = corMatrix(comsym$modelStruct$corStruct)[[1]] * (comsym$sigma)^2
comcov
exp1cov = corMatrix(exp1$modelStruct$corStruct)[[1]]  * (exp1$sigma)^2
exp1cov
autocov = corMatrix(auto1$modelStruct$corStruct)[[1]] * (auto1$sigma)^2
autocov
## Reverse back by multiplying the variance.
comcov = corMatrix(comsym$modelStruct$corStruct)[[1]] * (comsym$sigma)^2
comcov
exp1cov = corMatrix(exp1$modelStruct$corStruct)[[1]]  * (exp1$sigma)^2
exp1cov
autocov = corMatrix(auto1$modelStruct$corStruct)[[1]] * (auto1$sigma)^2
autocov
# Chunk 1
## 1.Active packages
library(nlme)
library(ggplot2)
library(tidyverse)
library(stargazer)
library(formattable)
# Chunk 2
# import in data
distance <- read.delim("./HW6-dental.txt",sep = '', header = T)
head(distance)
# Chunk 3
p = ggplot(distance, aes(x = Age, y = Distance, group = Child)) +
geom_line(aes(color = as.factor(Gender)))
print(p)
# Chunk 4
comsym <- gls(Distance ~ Gender + Age, distance, correlation = corSymm(form = ~ 1 | Child),
method = "REML")
summary(comsym)
corMatrix(comsym$modelStruct$corStruct)[[1]]
# Chunk 5
exp1 <- gls(Distance ~ Gender + Age, distance, correlation = corExp(form = ~ 1 |Child), method = "REML")
summary(exp1)
corMatrix(exp1$modelStruct$corStruct)[[1]]
# Chunk 6
# AR(1)
auto1 <- gls(Distance ~ Gender + Age, distance,
correlation = corAR1(form = ~ 1 |Child), method = "REML")
summary(auto1)
corMatrix(auto1$modelStruct$corStruct)[[1]]
# Chunk 7
sumtable <- matrix(c(2.045166,	2.418714,	2.418714,
0.674651,	0.65296,	0.65296), ncol= 3,byrow= TRUE)
colnames(sumtable) <- c("Compound", "Exponential", "AutoRegression")
rownames(sumtable) <- c("Gender","Age")
sumtable <- as.table(sumtable)
sumtable
## Reverse back by multiplying the variance.
comcov = corMatrix(comsym$modelStruct$corStruct)[[1]] * (comsym$sigma)^2
comcov
exp1cov = corMatrix(exp1$modelStruct$corStruct)[[1]]  * (exp1$sigma)^2
exp1cov
autocov = corMatrix(auto1$modelStruct$corStruct)[[1]] * (auto1$sigma)^2
autocov
comsym <- gls(Distance ~ Gender + Age, distance, correlation = corSymm(form = ~ 1 | Child),
method = "REML")
summary(comsym)
corMatrix(comsym$modelStruct$corStruct)[[1]]
comsym <- gls(Distance ~ Gender + Age, distance, correlation = corSymm(form = ~ 1 | Child),
method = "REML")
summary(comsym)
corMatrix(comsym$modelStruct$corStruct)[[1]]
# import in data
distance <- read.delim("./HW6-dental.txt",sep = '', header = T)
head(distance)
## Reverse back by multiplying the variance.
comcov = corMatrix(comsym$modelStruct$corStruct)[[1]] * (comsym$sigma)^2
comcov
exp1cov = corMatrix(exp1$modelStruct$corStruct)[[1]]  * (exp1$sigma)^2
exp1cov
autocov = corMatrix(auto1$modelStruct$corStruct)[[1]] * (auto1$sigma)^2
autocov
comsym <- gls(Distance ~ Gender + Age, distance, correlation = corCompSymm(form = ~ 1 | Child),
method = "REML")
summary(comsym)
corMatrix(comsym$modelStruct$corStruct)[[1]]
## Compound symmetry
comsym <- gls(Distance ~ Gender + Age, distance, correlation = corCompSymm(form = ~ 1 | Child),
method = "REML")
summary(comsym)
corMatrix(comsym$modelStruct$corStruct)[[1]]
exp1 <- gls(Distance ~ Gender + Age, distance, correlation = corExp(form = ~ 1 |Child), method = "REML")
summary(exp1)
corMatrix(exp1$modelStruct$corStruct)[[1]]
distance
getVarCov(distance, gender = 1, type = "marginal")
library(nlme)
getVarCov(distance, gender = 1, type = "marginal")
getVarCov(comsym, gender = 1, type = "marginal")
getVarCov(comsym, gender = 0, type = "marginal")
## Compound symmetry
comsym <- gls(Distance ~ Gender + Age, distance, correlation = corCompSymm(form = ~ 1 | Child),
method = "REML")
summary(comsym)
corMatrix(comsym$modelStruct$corStruct)[[1]]
comcov = corMatrix(comsym$modelStruct$corStruct)[[1]] * (comsym$sigma)^2
comcov
exp1 <- gls(Distance ~ Gender + Age, distance, correlation = corExp(form = ~ 1 |Child), method = "REML")
summary(exp1)
corMatrix(exp1$modelStruct$corStruct)[[1]]
exp1cov = corMatrix(exp1$modelStruct$corStruct)[[1]]  * (exp1$sigma)^2
exp1cov
# AR(1)
auto1 <- gls(Distance ~ Gender + Age, distance,
correlation = corAR1(form = ~ 1 |Child), method = "REML")
summary(auto1)
corMatrix(auto1$modelStruct$corStruct)[[1]]
